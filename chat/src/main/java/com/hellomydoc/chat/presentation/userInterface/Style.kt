package com.hellomydoc.chat.presentation.userInterface

import androidx.compose.ui.graphics.Color

object Style{
    val pdfIconTint = Color(0xFFF14444)
    const val previewContentWidth = 60
    val previewSectionBackgroundColor = Color(0xffededed)
    const val previewSectionHeight = 80
    const val noConversationYetText = "No conversation yet"
    const val sayHiText = "Say hi \uD83D\uDC4B"
    val sayHiButtonTextColor = Color.Black
    const val peerStatusTextSize = 12
    val peerStatusTextColor = Color.Gray
    val peerNameTextColor = Color.Black
    const val headerCorePadding = 8
    val headerBackgroundColor = Color.White
    const val mapDoneText = "Done"
    val mapButtonContentColor = Color.White
    const val mapPermissionAllowButtonBottomPadding = 24
    const val mapPermissionAllowButtonText = "Allow"
    const val mapPermissionAllowMessage = "You need to allow location permission :)"
    const val mapPermissionAllowMessagePadding = 24
    val mapLocationPickerBackground = Color.White
    const val modalBottomSheetCornerRadius = 16
    val mapButtonBackgroundColor = Color(0xff0055ff)
    const val mapPermissionAlloweButtonPadding = 24
    val chatPageBackgroundColor = Color.White
    const val dateVerticalMargin = 8
        const val chatDateCardElevation = 4
        val peerChatTextColor = Color.Black
        val peerChatCardBackgroundColor = Color(0xffF0F0F0)
        const val myChatVerticalMargin = 8
        const val myChatHorizontalMargin = 24
        const val dateDisplayFormat = "dd MMM, yyyy"
        val dateCardBackgroundColor = Color.White
        const val dateTextMargin = 8
        val dateColor = Color(0xffD32424)
        const val dateFormat = "yyyy/MM/dd"
        const val timeFormat = "hh:mm a"
        const val timeTopMargin = 6
        const val timeFontSize = 12
        val timeColor = Color.Gray
        const val chatTextPadding = 12
        val myChatTextColor = Color.White
        const val messageCardMinSizeFactor = 0.25f
        const val messageCardMaxSizeFactor = 0.75f
        const val chatCardCornerRadius = 20
        val myChatCardBackgroundColor = Color(0xff4F6266)
        const val floatingActionButtonsGap = 18
        val FloatingActionButtonCloseStateColor = Color.White
        val floatingActionButtonIconAddStateColor = Color(0xffD32424)
        const val floatingActionButtonIconSize = 40
        const val floatingActionButtonPressedElevation = 4
        const val floatingActionButtonElevation = 2
        val floatingActionButtonAddStateColor = Color(0xffD32424)
        val floatingActionButtonAttachmentStateColor = Color(0xffF0F0F0)
        const val floatingActionButtonCloseStateRotation = -135f
        const val floatingActionButtonSize = 64
        const val inputTextPlaceholderText = "Type a message"
        const val sendIconRightPadding = 12
        const val sendIconSize = 32
        val sendIconTint = Color(0xff222222)
        val inputTextCursorColor = Color.Black
        const val inputTextHorizontalPadding = 8
        val inputTextPlaceholderTextColor = Color(0xFF7C7C7C)
        val inputTextSelectionBackgroundColor = Color(0xFFFF6F6F)
        val inputTextSelectionHandleColor = Color(0xffD32424)
        val textInputAndSendBackgroundColor = Color(0xffF0F0F0)
        const val sendSectionButtonAndInputGap = 8
        const val sendSectionHorizontalPadding = 24
        const val sendSectionHeight = 64
        const val sendSectionVerticalPadding = 24
        const val attachmentVisibilityAnimationDuration = 300
        const val attachmentSelectionHeight = 80f
        const val backButtonSize = 32
        const val notFoundAnimationSize = 200
        const val headerHeight = 80
    }